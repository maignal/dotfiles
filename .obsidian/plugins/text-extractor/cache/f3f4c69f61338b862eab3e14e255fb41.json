{"path":"Exam/Exam3.pdf","text":"Exam III, Theory of Computation 2018-2019 • Books, notes, communication, calculators, cell phones, computers, etc... are not al- lowed. • Your explanations and proofs should be clear enough and in suﬃcient detail so that they are easy to understand and have no ambiguities. • You are allowed to refer to material covered in the class including theorems without reproving them. • Do not touch until the start of the exam. Good luck! Name: N◦ Sciper: Problem 1 Problem 2 Problem 3 Problem 4 Problem 5 Problem 6 / 8 points / 6 points / 8 points / 6 points / 6 points / 6 points Total / 40 Page 1 (of 8) CS-251 Theory of Computation, Exam III • Spring 2019 Ola Svensson 1 Basic questions. (8 pts) Let A ⊆ {0, 1}∗ and B ⊆ {0, 1}∗ be two languages. Which of the following statements are true? 1. A ≤m B =⇒ A ≤p B. 2. If P = NP, then {⟨φ⟩ | φ is a satisﬁable CNF formula} is in P. 3. {⟨M, w⟩ | M is a TM and M doesn’t halt on input w} is in NP. 4. A is recognized by a DFA ⇐⇒ A is recognized by an NFA. 5. A is regular and A ≤m B =⇒ B is regular. 6. A is regular =⇒ A is decidable =⇒ A is in P =⇒ A is in NP. 7. A is in P and B ≤p A =⇒ B is in P. 8. A ∈ TIME(n100) =⇒ A ∈ NP. 9. Suppose A is NP-hard and B is NP-complete. If B is in P then A is in P. 10. A is in P and B is in P =⇒ A ◦ B is in P. 11. A is recognizable by a TM =⇒ its complement ¯A is recognizable by a TM. 12. {w ∈ {0, 1}∗ | number of 1’s in w is divisible by 2019} is regular. (A complete solution identiﬁes all true statements. A fully correct solution is worth 8 points. A solution with one mistake is worth 7 points. A solution with two mistakes is worth 5 point. A solution with three mistakes is worth 3 points. A solution with four mistakes is worth 1 point. Solutions with more mistakes are worth 0 points. A mistake is to either indicate falsely that a false statement is true or to not indicate that a true statement is true.) Page 2 (of 8) CS-251 Theory of Computation, Exam III • Spring 2019 Ola Svensson 2 Regular languages. (6 pts) Consider the following language on alphabet Σ = {0, 1}: L2 = {w ∈ {0, 1}∗ | w has more 0’s than 1’s} . Is L2 regular? Provide a proof of your claim. (In this problem you should decide whether L2 is regular or not, and to give a proof of your claim. Recall that you are allowed to refer to material covered in the class including theorems without reproving them.) Page 3 (of 8) CS-251 Theory of Computation, Exam III • Spring 2019 Ola Svensson 3 Graph coloring. (8 pts, consisting of subproblems (a) and (b)) A coloring of an undirected graph is an assignment of colors to its vertices so that no two adjacent vertices are assigned the same color. For each positive integer k, let k-COL = {⟨G⟩ | G is colorable with k colors} . In Homework 3 you proved that 3-COL is NP-complete. In this problem we will consider the related languages 2-COL and 4-COL. Speciﬁcally, we will show that 2-COL is in P whereas 4-COL is NP-hard. 3a (3 pts) Show that 2-COL is in P. (In this problem you should show that 2-COL is in P. Recall that you are allowed to refer to material covered in the class including theorems without reproving them.) Page 4 (of 8) CS-251 Theory of Computation, Exam III • Spring 2019 Ola Svensson 3b (5 pts) Show that 3-COL ≤p 4-COL. (In this problem you should describe a polynomial time reduction from 3-COL to 4-COL and prove its correctness. Recall that you are allowed to refer to material covered in the class including theorems without reproving them.) Page 5 (of 8) CS-251 Theory of Computation, Exam III • Spring 2019 Ola Svensson 4 The traveling salesman problem. (6 pts) An instance of the classic traveling salesman problem is deﬁned by a tuple H = (V, d) where V is a set of cities and d : V × V → Z deﬁnes their pairwise distances. That is for two cities i ∈ V and j ∈ V , d(i, j) = d(j, i) equals the distance required to travel between cities i and j. Notice that H can be thought of as a complete graph (every possible edge is present) with weights on the edges corresponding to the distances. A tour is a cycle that visits every city exactly once, i.e., it is a cycle of length |V |. The length of a tour is the total distance travelled which equals the sum of the distances of the edges in the tour. An example is depicted below. The instance has 4 cities and the thick edges depict a tour of length 0 + 2 + 1 + 3 = 6. 2 4 3 5 1 0 Show that the following language is NP-complete: TSP = {⟨H = (V, d), k⟩ | H has a tour of length at most k}. In your proof you may use that the following language is NP-complete: HAM = {⟨G⟩ | G is an undirected graph that is Hamiltonian} . An undirected graph G = (V, E) is said to be Hamiltonian if it contains a cycle of length |V |, i.e., a cycle that visits every vertex. Two examples of Hamiltonian graphs are the complete graph and the graph consisting of a single cycle of length |V |. (In this problem you are asked to prove that the language TSP is NP-complete. Recall that you are allowed to use that HAM is NP-complete and to refer to material covered in the class including theorems without reproving them.) Page 6 (of 8) CS-251 Theory of Computation, Exam III • Spring 2019 Ola Svensson 5 Perfect matchings of a given weight. (6 pts) Let G = (V, E, w) be an undirected graph with edge-weights w : E → Z. A subset M ⊆ E of the edges is a perfect matching if every vertex is incident to exactly one edge in M . In other words, the edges in M pair up all the vertices. The weight of a matching M is the total weight of its edges, i.e., ∑ e∈M w(e). An example is depicted below. The graph consists of 4 vertices, 5 edges with integer weights, and the thick edges indicate a perfect matching of weight 2 + 3 = 5. 2 4 3 5 1 Show that the following language is NP-complete: L5 = {⟨G = (V, E, w), k⟩ | G has a perfect matching of weight k} . (In this problem you are asked to show that the language L5 is NP-complete. Recall that you are allowed to refer to material covered in the class including theorems without reproving them. In particular, you are allowed to use any of the NP-complete languages that we saw in class.) Page 7 (of 8) CS-251 Theory of Computation, Exam III • Spring 2019 Ola Svensson 6 Decidability. (6 pts) Consider the following language on alphabet Σ = {0, 1}: L6 = {⟨M ⟩ | M is a TM and the language recognized by M is NP-complete} . Is L6 decidable? Provide a proof of your claim. (In this problem you should decide whether L6 is decidable or not, and give a proof of your claim. Recall that you are allowed to refer to material covered in the class including theorems without reproving them.) Page 8 (of 8) CS-251 Theory of Computation, Exam III • Spring 2019 Ola Svensson","libVersion":"0.5.0","langs":""}