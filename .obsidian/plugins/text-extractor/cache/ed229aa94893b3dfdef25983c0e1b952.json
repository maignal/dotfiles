{"path":"Exam/ToC_exam_2022-1.pdf","text":"Final Exam, Theory of Computation 2022 • Books, notes, communication, calculators, cell phones, computers, etc... are not al- lowed. • Your explanations and proofs should be clear enough and in sufficient detail so that they are easy to understand and have no ambiguities. • You are allowed to refer to material covered in lectures (but not exercises) including theorems without reproving them. • Do not touch until the start of the exam. Good luck! Name: N◦ Sciper: Problem 1 Problem 2 Problem 3 Problem 4 Problem 5 Problem 6 / 15 points / 15 points / 15 points / 20 points / 20 points / 15 points Total / 100 Page 1 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2022 Mika Göös 1 (15 pts) Quick-fire round. Consider the following statements. 1. If A is regular and B ≤p A, then B is regular. 2. If A can be recognised by an NFA, then A can also be recognised by an NFA. 3. If A is decidable and B ⊆ A, then B is decidable. 4. If A is NP-complete and A ≤p B, then B is NP-complete. 5. If A is recognisable and A ≤m A, then A is undecidable. 6. If A and B are recognisable, then A ∩ B is recognisable. 7. The language {0n1m : n − m is divisible by 2022} is regular. 8. The language {⟨D⟩ : D is a DFA and L(D) is infinite} is decidable. 9. The language {⟨M ⟩ : M is a TM and L(M ) is infinite} is recognisable. 10. The language {⟨G⟩ : G is a graph that contains a clique of size 2022} is in P. 11. 3-SAT ≤p 2-SAT. 12. SAT ≤m HALT. 13. If P = NP, then Graph-Isomorphism ∈ P. 14. If NP ̸= coNP, then SAT /∈ coNP. 15. Every function f : {0, 1}n → {0, 1} can be computed by a CNF with O(2n) clauses. For each box below, write one of the following symbols: − T if the statement is known to be true. − F if the statement is false or not known to be true. E.g., both P = NP and P ̸= NP should be marked F. − or leave the box empty. A correct T/F answer is worth +1 point, an incorrect answer is worth −1 point, and an empty answer is worth 0 points. 1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. Page 2 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2022 Mika Göös 2 (15 pts) Pumping Lemma. 2a Write down the statement of the Pumping Lemma. (Only the statement, not its proof !) 2b For a string w = w1w2 · · · wn ∈ {0, 1}n define its reverse wR as the string written back- wards, that is, wR = wnwn−1 · · · w1. Show that the following language is not regular: L = {w ∈ {0, 1} ∗ : wR = w}. (A word w such that wR = w is called a palindrome.) Page 3 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2022 Mika Göös 3 (15 pts) Regular languages. For any language A ⊆ {0, 1}∗, define Drop(A) to be the language containing all strings that can be obtained by removing one bit from a string in A. That is, Drop(A) = {xy : xby ∈ A where b ∈ {0, 1}}. Show that if A is regular, then so is Drop(A). (Here it suffices that you describe clearly how to construct a DFA/NFA for Drop(A). You do not need to formally prove the correctness of your construction.) Page 4 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2022 Mika Göös 4 (20 pts) NP-completeness. Let G = (L ∪ R, E) be a bipartite graph with left vertices L, right vertices R (where L ∩ R = ∅), and where edges exist only between left and right vertices, that is, E ⊆ L × R. We say that a subset D ⊆ L is a left-dominating set iff for every right vertex v ∈ R there is some u ∈ D such that (u, v) ∈ E. For example, the highlighted vertices in the bipartite graph below form a left-dominating set of size 2. Show that the following problem is NP-complete: LeftDom = {⟨G, k⟩ : G is a bipartite graph with a left-dominating set of size k}. (In your proof, you may assume the NP-completeness of any of the problems discussed in the lec- tures, but not exercises/homework. This includes SAT, Independent-Set, Clique, Vertex- Cover, Set-Cover, Subset-Sum, etc. Make sure to prove that your reduction is correct!) Page 5 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2022 Mika Göös 5 (20 pts) Undecidability. Recall the notation wR from 2b. Define T = {⟨M ⟩ : M is a TM such that for all w, M accepts w iff it accepts wR}. Show that both T and T are unrecognisable. Page 6 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2022 Mika Göös 6 (15 pts) CNF Equivalence. We say that two CNF formulas φ and ψ, both defined over the same set of n variables x = (x1, . . . , xn), are equivalent if they compute the same boolean function, that is, φ(x) = ψ(x) for all x ∈ {0, 1}n. Consider the language CNF-Eq = {⟨φ, ψ⟩ : φ and ψ are a pair of equivalent CNFs}. Classify this problem into as small a complexity class as possible: is it in P, NP, coNP, or merely decidable? Is it complete for any complexity class? Justify your answer with a proof. (Note that, in general, for any class of languages C, we say a language A is C-complete iff A ∈ C and we have L ≤p A for all L ∈ C.) Page 7 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2022 Mika Göös","libVersion":"0.5.0","langs":""}