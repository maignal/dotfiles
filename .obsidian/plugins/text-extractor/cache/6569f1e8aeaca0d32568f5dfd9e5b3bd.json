{"path":"Exam/ToC_exam_2021.pdf","text":"Final Exam, Theory of Computation 2021 • Books, notes, communication, calculators, cell phones, computers, etc... are not al- lowed. • Your explanations and proofs should be clear enough and in suﬃcient detail so that they are easy to understand and have no ambiguities. • You are allowed to refer to material covered in lectures (but not exercises) including theorems without reproving them. • Do not touch until the start of the exam. Good luck! Name: N◦ Sciper: Problem 1 Problem 2 Problem 3 Problem 4 Problem 5 Problem 6 / 15 points / 20 points / 20 points / 15 points / 15 points / 15 points Total / 100 Page 1 (of 8) CS-251 Theory of Computation, Final Exam • Spring 2021 Mika Göös 1 (15 pts) Quick-ﬁre round. Which of the following statements are true? 1. If A is a ﬁnite set, then A is regular. 2. The language {0n : n is divisible by 2021} is regular. 3. If A is regular and B ⊆ A then B is regular. 4. Let A be undecidable but recognisable. Then A is unrecognisable. 5. The language {⟨N, w⟩ : N is an NFA and N accepts w} is undecidable. 6. If A and B are decidable, then A ∩ B is decidable. 7. If A ∈ P then A∗ ∈ P where A∗ = {a1a2 · · · an : n ≥ 0, ai ∈ A} is the Kleene star. 8. HALT ≤m SAT. 9. If A ≤m B then B ≤m A. 10. k-SAT ≤p 3-SAT for any k ≥ 1. 11. If P = NP then NP = coNP. 12. If SAT ∈ P then P = NP. 13. If A and B are both NP-hard, then A ≤p B. 14. The language {⟨n⟩ : n ∈ N and n is not a prime number} is in NP. 15. A circuit of size m can be written equivalently as a CNF formula of size O(m2). For each box below, indicate whether the statement is either True, False, or if you are uncertain, leave the box empty. A correct answer is worth +1 point, an incorrect answer is worth −1 point, and an empty answer is worth 0 points. Your answers: 1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. Page 2 (of 8) CS-251 Theory of Computation, Final Exam • Spring 2021 Mika Göös 2 (20 pts) Basics of NP. 2a Write down the deﬁnition of the class NP and the deﬁnition a given problem to be NP- complete. If you use the concept of a veriﬁer or an NTM, then explain what it is. Page 3 (of 8) CS-251 Theory of Computation, Final Exam • Spring 2021 Mika Göös 2b The class of problems solvable in deterministic exponential time is deﬁned by EXP = ⋃ k≥1 TIME(2 nk ). Show that NP ⊆ EXP. Page 4 (of 8) CS-251 Theory of Computation, Final Exam • Spring 2021 Mika Göös 3 (20 pts) Regular languages. For the following two languages, determine, with proof, whether they are regular. If a language is regular it suﬃces to draw a DFA or an NFA. You do not need to prove that your automaton is correct. 3a A = {0n : n is a power of 2} 3b B = {w ∈ {0, 1}∗ : w has an equal number of occurrences of 01 and 10 as substrings}. (For example, 010 has one occurrence of 01 and one occurrence of 10, so 010 ∈ B. On the other hand, 01101 has two occurrences of 01 and one occurrence of 10, so 01101 ̸∈ B.) Page 5 (of 8) CS-251 Theory of Computation, Final Exam • Spring 2021 Mika Göös 4 (15 pts) NP-completeness. Let G = (V, E) be a graph and w : E → N an assignment of non-negative integer weights to the edges. A subset of edges E′ ⊆ E is a spanning tree if the subgraph (V, E′) is a tree (no cycles) that connects all vertices. The weight of the spanning tree is∑ e∈E′ w(e). For example, the bold edges below form a spanning tree of weight 3 + 7 + 8 + 2 = 20. 2 2 3 0 5 7 78 In the Exact Spanning Tree problem (ESP for short), the input consists of a graph G = (V, E), edge weights w : E → N, and a target k ∈ N. The goal to decide whether G contains a spanning tree of weight exactly k. That is, ESP = {⟨G, w, k⟩ : G contains a spanning tree of weight exactly k}. Show that ESP is NP-complete. (You may use, without proof, the NP-completeness of any problem discussed in lectures.) Page 6 (of 8) CS-251 Theory of Computation, Final Exam • Spring 2021 Mika Göös 5 (15 pts) Decidability. Consider the language L = {⟨M ⟩ : M is a Turing machine that halts on every input} Classify L as one of (i) decidable, (ii) undecidable but recognisable, (iii) unrecognisable. Justify your answer with a proof. Page 7 (of 8) CS-251 Theory of Computation, Final Exam • Spring 2021 Mika Göös 6 (15 pts) Circuit complexity. This problem asks you to show that regular languages admit linear-size circuits. That is, let L ⊆ {0, 1}∗ be a regular language. For any input length n ∈ N, show how to construct a boolean circuit Cn with n input variables, one output wire, and O(n) gates such that ∀x ∈ {0, 1} n : Cn(x) = 1 ⇐⇒ x ∈ L. Page 8 (of 8) CS-251 Theory of Computation, Final Exam • Spring 2021 Mika Göös","libVersion":"0.5.0","langs":""}