{"path":"Exercises/ToC ex 4.pdf","text":"Exercise IV, Theory of Computation 2025 These exercises are for your own benefit. Feel free to collaborate and share your answers with other students. Solve as many problems as you can and ask for help if you get stuck for too long. Problems marked * are more difficult but also more fun :). These problems are taken from various sources at EPFL and on the Internet, too numer- ous to cite individually. 1 Are Turing-decidable languages closed under the following operations? Give informal proofs. 1a Intersection 1b Concatenation 1c Complementation Do these arguments work for Turing-recognisable languages? If not, can you adapt them? 2 Construct a Turing machine which recognizes the language L = {0 i1j | i > j ≥ 0 }. 3 Let L be the language over the singleton alphabet {1} consisting of all the strings whose lengths are prime numbers. Thus, L = {11, 111, 11111, 1111111, . . .}. Is L Turing-decidable? 4 Determine all the languages over the unary alphabet {1} which are decided by a Turing machine that only has three states (including the accept and reject states). 5* Consider a variant of the Turing machine whose head can move right or stay put. In particular, the transition function δ of such a machine takes the form δ : Q × Γ → Q × Γ × {P, R}, where P corresponds to the head staying in place after changing the state and tape symbol. Argue that this model of computation is not equivalent to our standard Turing machine model, and describe the class of languages it recognises. Hint: Firstshowthismodelisequivalenttothemodelwheretheheadcanonlymoveright. 6* Construct a Turing machine which decides the language L = {wwR | w ∈ {0, 1}∗}, where wR denote the reverse of the string w. Hint: Repeatedlyreducethelengthoftheinputwhilemakingsomechecks. Page 1 (of 1) CS-251 Theory of Computation • Spring 2025","libVersion":"0.5.0","langs":""}