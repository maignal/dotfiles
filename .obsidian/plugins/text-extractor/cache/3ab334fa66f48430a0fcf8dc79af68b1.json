{"path":"Exam/ToC_Exams.pdf","text":"Final Exam, Theory of Computation 2023 • Books, notes, communication, calculators, cell phones, computers, etc... are not al- lowed. • Your explanations and proofs should be clear enough and in suﬃcient detail so that they are easy to understand and have no ambiguities. • You are allowed to refer to material covered in lectures (but not exercises) including theorems without reproving them. • Do not touch until the start of the exam. Good luck! Name: N◦ Sciper: Problem 1 Problem 2 Problem 3 Problem 4 Problem 5 Problem 6 / 15 points / 15 points / 20 points / 20 points / 15 points / 15 points Total / 100 Page 1 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2023 Mika Göös 1 (15 pts) Quick-ﬁre round. Consider the following statements. 1. Every regular language is in P. 2. If A ⊆ B ⊆ C and both A and C are regular, then B is regular. 3. If A and B are regular, then A \\ B = {x : x ∈ A and x /∈ B} is regular. 4. If A ≤m HALT and A ≤m HALT, then A is decidable. 5. If A is recognisable, then A is recognisable. 6. If HALT ≤p A, then A /∈ NP. 7. If A ∈ NP and B ≤p A, then B ∈ NP. 8. Graph-Isomorphism is NP-complete. 9. SAT /∈ coNP. 10. Every CNF formula of size n can be equivalently written as DNF formula of size O(n2). 11. The language {(ab)n : n is divisible by 2023} is regular. 12. The language {⟨M ⟩ : M is a TM that halts on all inputs} is recognisable. 13. The language {⟨ϕ⟩ : ϕ is a CNF such that ϕ(x) = ϕ(x′) for all inputs x, x′} is in NP. 14. The language {⟨p⟩ : p is an n-variate polynomial s.t. p(x) = 0 for some x ∈ Zn} is decidable. 15. The language {⟨D, 1n⟩ : D is a DFA that rejects some n-bit string x ∈ {0, 1}n} is in P. (Compare this to Problems 3 and 5 below! ,) For each box below, write one of the following symbols: − T if the statement is known to be true. − F if the statement is false or not known to be true. E.g., both P = NP and P ̸= NP should be marked F. − or leave the box empty. A correct T/F answer is worth +1 point, an incorrect answer is worth −1 point, and an empty answer is worth 0 points. Page 2 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2023 Mika Göös 2 (15 pts) Regular languages. Let D = (Q, Σ, δ, q0, F ) be a DFA. Show that L(D) is inﬁnite if and only if D accepts some string x ∈ Σ∗ whose length |x| satisﬁes |Q| ≤ |x| ≤ 2|Q|. Page 3 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2023 Mika Göös 3 (20 pts) NFAs and NP-completeness. Show that the following language is NP-complete: RNFA = { ⟨N, 1 n⟩ : N is an NFA that rejects some n-bit string x ∈ {0, 1} n}. (Hint: Reduce from SAT: given a CNF formula ϕ over n variables, show how to construct a polynomial-size NFA N such that ϕ(x) = 1 iﬀ N rejects x.) Page 4 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2023 Mika Göös 4 (20 pts) NP-completeness. Let G = (V, E) be an undirected graph. We say that S ⊆ V is a blocking set if it contains at least one node from each cycle in G. In other words, if we remove the nodes S (and all edges adjacent to S) from G, then we are left with a forest (graph with no cycles). For example, the highlighted nodes below form a blocking set of size 2. Show that the following problem is NP-complete: Block = {⟨G, k⟩ : G is a graph that contains a blocking set of of size k}. (You may assume the NP-completeness of any of the problems discussed in the lectures: SAT, Independent-Set, Clique, Vertex-Cover, Set-Cover, Subset-Sum, etc. Make sure to prove that your reduction is correct!) Page 5 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2023 Mika Göös 5 (15 pts) Undecidability. Consider the language RTM = {⟨M, 1n⟩ : M is a TM that rejects some n-bit string x ∈ {0, 1}n}. Classify RTM as one of (i) decidable, (ii) undecidable but recognisable, (iii) unrecognisable. Justify your answer with a proof. Page 6 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2023 Mika Göös 6 (15 pts) Busy Beaver. Deﬁne the n-th Busy Beaver number, denoted BB(n), as the largest number k ∈ N such that there exists a TM M = (Q, Σ, Γ, δ, q0, qhalt) such that (1) M has |Q| = n + 1 states (that is, n states in addition to its halting state qhalt), (2) M has a binary input/tape alphabet, Σ = Γ = {0, 1}, (3) M , on the empty input ε, halts with 1k written on its tape. In other words, amongst all (n + 1)-state TMs that halt on the empty input, what is the longest all-1 string that it can output? Note that BB(n) is always ﬁnite, as there are only ﬁnitely many distinct TMs satisfying (1)–(3) for any given n. Show that the function BB : N → N is not computable. That is, show that there is no TM that on input n will always halt with BB(n) on its tape. (Hint: If BB were computable, how would you decide the Halting problem? ) Page 7 (of 7) CS-251 Theory of Computation, Final Exam • Spring 2023 Mika Göös","libVersion":"0.5.0","langs":""}