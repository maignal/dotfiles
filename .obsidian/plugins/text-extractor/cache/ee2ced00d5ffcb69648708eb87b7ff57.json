{"path":"Lectures/Lecture2_handout.pdf","text":"Nondeterministic Finite Automata Mika Göös School of Computer and Communication Sciences Lecture 2 34 CHAPTER 1 / REGULAR LANGUAGES In beginning to describe the mathematical theory of ﬁnite automataa we do so in the abstracta without reference to any particular application“ The following ﬁgure depicts a ﬁnite automaton called M1“ FIGURE 1.4 Aﬁnite automaton called M1 that has three states Figure —“¸ is called the state diagram of M1“It has three statesalabeled q1a q2a and q3“The start statea q1ais indicated by the arrow pointing at it from nowhere“ The accept statea q2ais the one with a double circle“ The arrows going from one state to another are called transitions“ When this automaton receives an input string such as 1101ait processes that string and produces an output“ The output is either accept or reject“We will consider only this yes”no type of output for now to keep things simple“ The processing begins in M1’s start state“ The automaton receives the symbols from the input string one by one from left to right“ After reading each symbola M1 moves from one state to another along the transition that has that symbol as its label“ When it reads the last symbola M1 produces its output“ The output is accept if M1 is now in an accept state and reject if it is not“ For examplea when we feed the input string 1101 into the machine M1 in Figure —“¸a the processing proceeds as follows: 1. Start in state q1“ 2. Read 1afollow transition from q1 to q2“ 3. Read 1afollow transition from q2 to q2“ 4. Read 0afollow transition from q2 to q3“ 5. Read 1afollow transition from q3 to q2“ 6. Accept because M1 is in an accept state q2 at the end of the input“ Experimenting with this machine on a variety of input strings reveals that it accepts the strings 1a 01a 11aand 0101010101“In facta M1 accepts any string that ends with a 1aas it goes to its accept state q2 whenever it reads the symbol 1“In additiona it accepts strings 100a 0100a 110000aand 0101000000aand any string that ends with an even number of 0sfollowing the last 1“It rejects other stringsa such as 0a 10a 101000“ Can you describe the language consisting of all strings that M1 accepts? We will do so shortly“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm RECALL: DFAs, REGULAR LANGUAGES Lecture 2 Definitions A deterministic finite automaton (DFA) M is a 5-tuple (Q, Σ, δ, q0, F ), where ▶ Q is a finite set called the states, ▶ Σ is a finite set called the alphabet, ▶ δ : Q × Σ → Q is the transition function, ▶ q0 ∈ Q is the start state, and ▶ F ⊆ Q is the set of accept states. (allow F = ∅) 34 CHAPTER 1 / REGULAR LANGUAGES In beginning to describe the mathematical theory of ﬁnite automataa we do so in the abstracta without reference to any particular application“ The following ﬁgure depicts a ﬁnite automaton called M1“ FIGURE 1.4 Aﬁnite automaton called M1 that has three states Figure —“¸ is called the state diagram of M1“It has three statesalabeled q1a q2a and q3“The start statea q1ais indicated by the arrow pointing at it from nowhere“ The accept statea q2ais the one with a double circle“ The arrows going from one state to another are called transitions“ When this automaton receives an input string such as 1101ait processes that string and produces an output“ The output is either accept or reject“We will consider only this yes”no type of output for now to keep things simple“ The processing begins in M1’s start state“ The automaton receives the symbols from the input string one by one from left to right“ After reading each symbola M1 moves from one state to another along the transition that has that symbol as its label“ When it reads the last symbola M1 produces its output“ The output is accept if M1 is now in an accept state and reject if it is not“ For examplea when we feed the input string 1101 into the machine M1 in Figure —“¸a the processing proceeds as follows: 1. Start in state q1“ 2. Read 1afollow transition from q1 to q2“ 3. Read 1afollow transition from q2 to q2“ 4. Read 0afollow transition from q2 to q3“ 5. Read 1afollow transition from q3 to q2“ 6. Accept because M1 is in an accept state q2 at the end of the input“ Experimenting with this machine on a variety of input strings reveals that it accepts the strings 1a 01a 11aand 0101010101“In facta M1 accepts any string that ends with a 1aas it goes to its accept state q2 whenever it reads the symbol 1“In additiona it accepts strings 100a 0100a 110000aand 0101000000aand any string that ends with an even number of 0sfollowing the last 1“It rejects other stringsa such as 0a 10a 101000“ Can you describe the language consisting of all strings that M1 accepts? We will do so shortly“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm ▶ Q = {q1, q2, q3}, ▶ Σ = {0, 1}, ▶ δ is described as 36 CHAPTER 1 / REGULAR LANGUAGES The formal deﬁnition precisely describes what we mean by a ﬁnite automaˆ ton“ For examplea returning to the earlier question of whether 0 accept states is allowablea you can see that setting F to be the empty set ∅ yields 0 accept statesa which is allowable“ Furthermorea the transition function δ speciﬁes exactly one next state for each possible combination of a state and an input symbol“ That anˆ swers our other question afﬁrmativelya showing that exactly one transition arrow exits every state for each possible input symbol“ We can use the notation of the formal deﬁnition to describe individual ﬁnite automata by specifying each of the ﬁve parts listed in Deﬁnition —“5“ For examˆ plea let’s return to the ﬁnite automaton M1 we discussed earliera redrawn here for convenience“ FIGURE 1.6 The ﬁnite automaton M1 We can describe M1 formally by writing M1 =(Q, Σ, δ,q1,F )awhere 1. Q = {q1,q2,q3}a 2. Σ = {0,1}a 3. δ is described as 01 q1 q1 q2 q2 q3 q2 q3 q2 q2, 4. q1 is the start statea and 5. F = {q2}“ If A is the set of all strings that machine M acceptsa we say that A is the language of machine M and write L(M )= A“We say that M recognizes A or that M accepts A“Because the term accept has different meanings when we refer to machines accepting strings and machines accepting languagesa we prefer the term recognize for languages in order to avoid confusion“ Amachine may accept several stringsa but it always recognizes only one lanˆ guage“ If the machine accepts no stringsa it still recognizes one language— namelya the empty language ∅“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm ▶ q1 is the start state, and ▶ F = {q2}. Lecture 2 Definitions A deterministic finite automaton (DFA) M is a 5-tuple (Q, Σ, δ, q0, F ), where ▶ Q is a finite set called the states, ▶ Σ is a finite set called the alphabet, ▶ δ : Q × Σ → Q is the transition function, ▶ q0 ∈ Q is the start state, and ▶ F ⊆ Q is the set of accept states. (allow F = ∅) ▶ Σ∗ — set of all finite strings composed of symbols from Σ ▶ Includes the empty string ε ▶ L(M) ⊆ Σ∗ set of strings accepted by M. We say that M recognizes the language L(M). ▶ A ⊆ Σ∗ is a regular language if there is a DFA M s.t. A = L(M). Lecture 2 Is L = {w ∈ {0, 1}∗ : w contains an even number of 1’s} a regular language? YES because it is recognized by the following DFA EVEN ODD 0 0 1 1 Formally, we prove correctness, i.e., that a DFA accepts a certain language, via induction on the length of the string. It is a good idea to choose a strong induction hypothesis that classifies which strings leads to which states instead of only talking about accepting states Lecture 2 ▶ Complement ▶ ¯L = {w ∈ Σ∗ : w is not in L} ▶ Union ▶ L1 ∪ L2 = {w ∈ Σ∗ : w ∈ L1 or w ∈ L2} ▶ Intersection ▶ L1 ∩ L2 = {w ∈ Σ∗ : w ∈ L1 and w ∈ L2} ▶ Concatenation ▶ L1 ◦ L2 = {w ∈ Σ∗ : w = w1.w2, w1 ∈ L1 and w2 ∈ L2} NEW LANGUAGES FROM OLD Lecture 2 Complement If L is regular is its complement ¯L = {w ∈ Σ∗ : w is not in L} regular? ▶ Let M = (Q, Σ, δ, q0, F ) be a DFA that accepts L ▶ Let M ′ = (Q, Σ, δ, q0, ¯F = Q \\ F ) be the DFA where accepting states are complemented ▶ If w ∈ L(M) then w < L(M ′) ▶ If w < L(M) then w ∈ L(M ′) Theorem: L(M ′) = ¯L Hence complement of a regular language is regular Lecture 2 Example 1.1 FINITE AUTOMATA 37 In our examplea let A = {w| w contains at least one 1 and an even number of 0sfollow the last 1}. Then L(M1)= Aaor equivalentlya M1 recognizes A“ EXAMPLES OF FINITE AUTOMATA EXAMPLE 1.7 Here is the state diagram of ﬁnite automaton M2“ FIGURE 1.8 State diagram of the twoˆstate ﬁnite automaton M2 In the formal descriptiona M2 is ( {q1,q2}, {0,1}, δ,q1, {q2}) “The transition function δ is 01 q1 q1 q2 q2 q1 q2. Remember that the state diagram of M2 and the formal description of M2 contain the same informationa only in different forms“ You can always go from one to the other if necessary“ Agood way to begin understanding any machine is to try it on some sample input strings“ When you do these “experiments” to see how the machine is workinga its method of functioning often becomes apparent“ On the sample string 1101athe machine M2 starts in its start state q1 and proceeds ﬁrst to state q2 after reading the ﬁrst 1aand then to states q2a q1aand q2 after reading 1a 0a and 1“The string is accepted because q2 is an accept state“ But string 110 leaves M2 in state q1aso it is rejected“ After trying a few more examplesayou would see that M2 accepts all strings that end in a 1“Thus L(M2)= {w| w ends in a 1}“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm is the complement of 38 CHAPTER 1 / REGULAR LANGUAGES EXAMPLE 1.9 Consider the ﬁnite automaton M3“ FIGURE 1.10 State diagram of the twoˆstate ﬁnite automaton M3 Machine M3 is similar to M2 except for the location of the accept state“ As usuala the machine accepts all strings that leave it in an accept state when it has ﬁnished reading“ Note that because the start state is also an accept statea M3 accepts the empty string ε“As soon as a machine begins reading the empty stringa it is at the end; so if the start state is an accept statea ε is accepted“ In addition to the empty stringa this machine accepts any string ending with a 0“ Herea L(M3)= {w| w is the empty string ε or ends in a 0}. EXAMPLE 1.11 The following ﬁgure shows a ﬁveˆstate machine M4“ FIGURE 1.12 Finite automaton M4 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Union ▶ L1 = L(M1), M1 = (Q1, Σ, δ1, q1, F1) ▶ L2 = L(M2), M2 = (Q2, Σ, δ2, q2, F2) If M1’s alphabet Σ1 is different from M2’s alphabet Σ2 then first extend them to the alphabet Σ = Σ1 ∪ Σ2 before taking the union The union is recognized by the DFA M = (Q, Σ, δ, q0, F ) where ▶ Q = Q1 × Q2 ▶ δ((r1, r2), a) = (δ1(r1, a), δ2(r2, a)) ▶ q0 = (q1, q2) ▶ F = {(r1, r2) : r1 ∈ F1 or r2 ∈ F2} Run M1 and M2 in parallel and accept if one of them does Lecture 2 Example q0 q1 0 0,1 1 h0 h1 0 1 10 q0h0 q1h0 q0h1 q1h1 0 1 0 1 1 0 1 0 The union Lecture 2 Intersection ▶ L1 = L(M1), M1 = (Q1, Σ, δ1, q1, F1) ▶ L2 = L(M2), M2 = (Q2, Σ, δ2, q2, F2) If M1’s alphabet Σ1 is different from M2’s alphabet Σ2 then first extend them to the alphabet Σ = Σ1 ∪ Σ2 before taking the intersection The union is recognized by the DFA M = (Q, Σ, δ, q0, F ) where ▶ Q = Q1 × Q2 ▶ δ((r1, r2), a) = (δ1(r1, a), δ2(r2, a)) ▶ q0 = (q1, q2) ▶ F = {(r1, r2) : r1 ∈ F1 and r2 ∈ F2} Run M1 and M2 in parallel and accept if both of them do Lecture 2 Example q0 q1 0 0,1 1 h0 h1 0 1 10 q0h0 q1h0 q0h1 q1h1 0 1 0 1 1 0 1 0 The intersection Lecture 2 Concatenation? L1 ◦ L2 = {w ∈ Σ∗ : w = w1.w2, w1 ∈ L1 and w2 ∈ L2} Difficulty to decide whether a string w is in L1 ◦ L2 is that we need to “guess” where to break it into w1 and w2 Lecture 2 Should I stay or should I go (left or right) NONDETERMINISM Lecture 2 Nondeterminism vs Determinism 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm State diagram of a Nondeterministic Finite Automaton (NFA) Differences to DFAs: 1 Ability to transition to more than one state on a given symbol Ex: q1 has two outgoing transitions for symbol 1 2 A state may have no transition on a particular symbol Ex: q3 has no outgoing transitions for symbol 0 3 Ability to take a step without reading any input symbol (ε-transitions) Ex: q2 can transition to q3 without reading a symbol Lecture 2 How does an NFA Compute? Two different but equivalent viewpoints: ▶ It is a parallel computer that makes multiple copies of itself and follows all possibilities in parallel. If any one of these copies is in an accept state at the end, the NFA accepts the input string ▶ It is a computer that accepts if there exist guesses/choices that makes it accept Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Let’s start ▶ cat moves to initial state q1 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Let’s start ▶ cat moves to initial state q1 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ cat stays in state q1 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ cat stays in state q1 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ cat can (i) stay in state q1, (ii) move to q2, and (iii) move to q2 and then to q3 via the ε-transition ▶ We make a copy of the process (cat) for each of the three possibilities that we then run in parallel 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ cat can (i) stay in state q1, (ii) move to q2, and (iii) move to q2 and then to q3 via the ε-transition ▶ We make a copy of the process (cat) for each of the three possibilities that we then run in parallel 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ q1 → q1 and q2 → q3 ▶ The process/cat previously at q3 dies since there is no valid 0-transition 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ q1 → q1 and q2 → q3 ▶ The process/cat previously at q3 dies since there is no valid 0-transition 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ Cat at q1 can end up at q1, q2 or q3 so we make three copies ▶ Cat at q3 ends up in q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ Cat at q1 can end up at q1, q2 or q3 so we make three copies ▶ Cat at q3 ends up in q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ Cat at q1 can end up at q1, q2 or q3 so we make three copies ▶ Cat at q2 “dies” ▶ Cat at q3 ends up in q4 ▶ Cat at q4 stays at q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ Cat at q1 can end up at q1, q2 or q3 so we make three copies ▶ Cat at q2 “dies” ▶ Cat at q3 ends up in q4 ▶ Cat at q4 stays at q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ Cat at q1 stays at q1 ▶ Cat at q2 goes to q3 ▶ Cat at q3 dies ▶ Cats at q4 stay at q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ Cat at q1 stays at q1 ▶ Cat at q2 goes to q3 ▶ Cat at q3 dies ▶ Cats at q4 stay at q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Parallel Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 The input string is accepted if any one of the copies is in an accept state at the end of the input In the example two copies are in the accept state at the end so the input is accepted 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Let’s start ▶ cat moves to initial state q1 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Let’s start ▶ cat moves to initial state q1 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ cat stays in state q1 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ cat stays in state q1 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ cat can (i) stay in state q1, (ii) move to q2, and (iii) move to q2 and then to q3 via the ε-transition ▶ we make a guess that the cat goes to state q2 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ cat can (i) stay in state q1, (ii) move to q2, and (iii) move to q2 and then to q3 via the ε-transition ▶ we make a guess that the cat goes to state q2 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ q2 → q3 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ q2 → q3 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ Cat at q3 ends up in q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ Cat at q3 ends up in q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ Cat at q4 stays at q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 1 ▶ Cat at q4 stays at q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ Cats at q4 stay at q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 Symbol read 0 ▶ Cats at q4 stay at q4 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Guess Viewpoint 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Input: 010110 The input string is accepted if there exist guesses that makes the process end in the accept state at the end of the input Equivalently, if there exists at least one path that ends at an accept state (Guess and Verify!) 1.2 NONDETERMINISM 49 FIGURE 1.28 Deterministic and nondeterministic computations with an accepting branch Let’s consider some sample runs of the NFA N1 shown in Figure —“¨7“ The computation of N1 on input 010110 is depicted in the following ﬁgure“ FIGURE 1.29 The computation of N1 on input 010110 Lecture 2 Example 1 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm What language does the NFA recognize? L = {w ∈ {0, 1} ∗ | w contains 11 or 101 as a substring} Lecture 2 Example 2 1.2 NONDETERMINISM 51 EXAMPLE 1.30 Let A be the language consisting of all strings over {0,1} containing a 1 in the third position from the end Ae“g“a 000100 is in A but 0011 is not]“ The following fourˆstate NFA N2 recognizes A“ FIGURE 1.31 The NFA N2 recognizing A One good way to view the computation of this NFA is to say that it stays in the start state q1 until it “guesses” that it is three places from the end“ At that pointa if the input symbol is a 1ait branches to state q2 and uses q3 and q4 to “check” on whether its guess was correct“ As mentioneda every NFA can be converted into an equivalent DFA;but someˆ times that DFA may have many more states“ The smallest DFA for A contains eight states“ Furthermorea understanding the functioning of the NFA is much easiera as you may see by examining the following ﬁgure for the DFA“ FIGURE 1.32 A DFA recognizing A Suppose that we added ε to the labels on the arrows going from q2 to q3 and from q3 to q4 in machine N2 in Figure —“´—“ So both arrows would then have the label 0, 1, ε instead of just 0, 1“What language would N2 recognize with this modiﬁcation? Try modifying the DFA in Figure —“´¨ to recognize that language“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm What language does the NFA recognize? L = {w ∈ {0, 1}∗ | w contains a 1 in the third position from the end} Remark: If in the computation path you visit an accept state but don’t end there, then that path is not accepting. E.g. 1000 Lecture 2 Example 3 52 CHAPTER 1 / REGULAR LANGUAGES EXAMPLE 1.33 The following NFA N3 has an input alphabet {0} consisting of a single symbol“ An alphabet containing only one symbol is called a unary alphabet“ FIGURE 1.34 The NFA N3 This machine demonstrates the convenience of having ε arrows“ It accepts all strings of the form 0 k where k is a multiple of 2 or 3“ARemember that the superscript denotes repetitiona not numerical exponentiation“] For examplea N3 accepts the strings εa 00a 000a 0000aand 000000abut not 0 or 00000“ Think of the machine operating by initially guessing whether to test for a multiple of 2 or a multiple of 3 by branching into either the top loop or the botˆ tom loop and then checking whether its guess was correct“ Of coursea we could replace this machine by one that doesn’t have ε arrows or even any nondeterˆ minism at alla but the machine shown is the easiest one to understand for this language“ EXAMPLE 1.35 We give another example of an NFA in Figure —“´6“ Practice with it to satisfy yourself that it accepts the strings εa aa babaaand baaabut that it doesn’t acˆ cept the strings ba bbaand babba“Later we use this machine to illustrate the procedure for converting NFAsto DFAs“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm What language does the NFA recognize? L = {w ∈ {0, 1}∗ | w = 0 k where k is divisible by 2 or 3} Lecture 2 Formal definitions A nondeterministic finite automaton (NFA) M is a 5-tuple (Q, Σ, δ, q0, F ), where ▶ Q is a finite set called the states, ▶ Σ is a finite set called the alphabet, ▶ δ : Q × (Σ ∪ {ε}) → 2 Q is the transition function, ▶ q0 ∈ Q is the start state, and ▶ F ⊆ Q is the set of accept states. (allow F = ∅) ▶ Here 2Q denotes the power set of Q. Ex: Q = {q1, q2}, 2Q = {∅, {q1}, {q2}, {q1, q2}} ▶ An input is accepted if there exists at least one path that ends at an accepting state ▶ An input is rejected if no computation path end at an accepting state Lecture 2 Example 48 CHAPTER 1 / REGULAR LANGUAGES FIGURE 1.27 The nondeterministic ﬁnite automaton N1 The difference between a deterministic ﬁnite automatona abbreviated DFAa and a nondeterministic ﬁnite automatona abbreviated NFAais immediately apˆ parent“ Firsta every state of a DFA always has exactly one exiting transition arrow for each symbol in the alphabet“ The NFA shown in Figure —“¨7 violates that rule“ State q1 has one exiting arrow for 0abut it has two for 1; q2 has one arrow for 0abut it has none for 1“In an NFAaa state may have zeroa onea or many exiting arrows for each alphabet symbol“ Seconda in a DFAalabels on the transition arrows are symbols from the alphaˆ bet“ This NFA has an arrow with the label ε“In generala an NFA may have arrows labeled with members of the alphabet or ε“Zeroa onea or many arrows may exit from each state with the label ε“ How does an NFA compute? Suppose that we are running an NFA on an input string and come to a state with multiple ways to proceed“ For examplea say that we are in state q1 in NFA N1 and that the next input symbol is a 1“After reading that symbola the machine splits into multiple copies of itself and follows all the possibilities in parallel“ Each copy of the machine takes one of the possible ways to proceed and continues as before“ If there are subsequent choicesa the machine splits again“ If the next input symbol doesn’t appear on any of the arrows exiting the state occupied by a copy of the machinea that copy of the machine diesa along with the branch of the computation associated with it“ Finallya if any one of these copies of the machine is in an accept state at the end of the inputa the NFA accepts the input string“ If a state with an ε symbol on an exiting arrow is encountereda something similar happens“ Without reading any inputa the machine splits into multiple copiesa one following each of the exiting εˆlabeled arrows and one staying at the current state“ Then the machine proceeds nondeterministically as before“ Nondeterminism may be viewed as a kind of parallel computation wherein multiple independent “processes” or “threads” can be running concurrently“ When the NFA splits to follow several choicesa that corresponds to a process “forking” into several childrena each proceeding separately“ If at least one of these processes acceptsa then the entire computation accepts“ Another way to think of a nondeterministic computation is as a tree of possiˆ bilities“ The root of the tree corresponds to the start of the computation“ Every branching point in the tree corresponds to a point in the computation at which the machine has multiple choices“ The machine accepts if at least one of the computation branches ends in an accept statea as shown in Figure —“¨8“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm 54 CHAPTER 1 / REGULAR LANGUAGES EXAMPLE 1.38 Recall the NFA N1: The formal description of N1 is (Q, Σ, δ,q1,F )awhere 1. Q = {q1,q2,q3,q4}a 2. Σ = {0,1}a 3. δ is given as 01 ε q1 {q1}{q1,q2} ∅ q2 {q3} ∅ {q3} q3 ∅ {q4} ∅ q4 {q4}{q4} ∅, 4. q1 is the start statea and 5. F = {q4}“ The formal deﬁnition of computation for an NFA is similar to that for a DFA“ Let N =(Q, Σ, δ,q0,F ) be an NFA and w astring over the alphabet Σ“Then we say that N accepts w if we can write w as w = y1y2 ··· ymawhere each yi is a member of Σε and a sequence of states r0,r1,... ,rm exists in Q with three conditions: 1. r0 = q0a 2. ri+1 ∈ δ(ri,yi+1)afor i =0,... ,m − 1aand 3. rm ∈ F “ Condition — says that the machine starts out in the start state“ Condition ¨ says that state ri+1 is one of the allowable next states when N is in state ri and reading yi+1“Observe that δ(ri,yi+1) is the set of allowable next states and so we say that ri+1 is a member of that set“ Finallya condition ´ says that the machine accepts its input if the last state is an accept state“ EQUIVALENCE OF NFAS AND DFAS Deterministic and nondeterministic ﬁnite automata recognize the same class of languages“ Such equivalence is both surprising and useful“ It is surprising beˆ cause NFAsappear to have more power than DFAsa so we might expect that NFAs recognize more languages“ It is useful because describing an NFA for a given language sometimes is much easier than describing a DFA for that language“ Say that two machines are equivalent if they recognize the same language“ ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Why Study Nondeterminism? If there is no “real-world” analog of nondeterminism construct, namely, make the choice that will lead to success, why bother? ▶ Mathematically well-defined and valid question to study its impact on computational power ▶ Useful in translation of regular languages: ▶ As we will show, every NFA can be converted into an equivalent DFA ▶ So a language is regular iff it is recognized by an NFA ▶ Constructing NFAs is sometimes easier than directly constructing DFAs (doing concatenation with NFA is an exercise) ▶ NFA may be much (exponentially) smaller than its deterministic counterpart, or its functioning may be easier to understand ▶ Nondeterminism is also critical to theory of NP-complete problems which includes a large number of natural optimization problems Lecture 2 Theorem. Every nondeterministic finite automaton has an equivalent deterministic finite automaton. Corollary. A language is regular if and only if some nondeterministic finite automaton recognizes it. ▶ We prove the theorem for NFAs without ε-transitions ▶ Exercises ▶ Change the proof to work in the presence of ε-transitions (see book) ▶ Given an NFA N construct an NFA N ′ with L(N ′) = L(N) and no ε-transitions in N ′ (see Exercise Set 2) Lecture 2 Example p q r 0,1 1 0,1 Define ˜δ : 2Q × Σ → 2Q be function that maps possible states A to the possible states after reading one more symbol a: ˜δ(A, a) = ⋃ q∈A δ(q, a) ˜δ 0 1 ∅ ∅ ∅ {p} {p} {p, q} {q} {r } {r } {r } ∅ ∅ {p, q} {p, r } {p, q, r } {p, r } {p} {p, q} {q, r } {r } {r } {p, q, r } {p, r } {p, q, r } {q} {r } {q, r } ∅ 0,1 0,10,1 0,1 {p} {p, q} {p, r } {p,q,r} 0 1 1 0 0 1 0 1 Lecture 2 Extended Transition Function For a DFA: A state and a sequence of symbols maps to a state by sequentially applying transit function, by reading the input sequence letter by letter M = (QM , Σ, δM , q0, FM ) ∆M : QM × Σ ∗ → QM ∆M (A, ε) = A ∆M (A, xa) = δM (∆M (A, x ), a) For an NFA: A set of states and a sequence of symbols maps to a set of states by sequentially applying transit function, by reading the input sequence letter by letter. A state with null input maps to the same state (no ε-transitions) N = (QN , Σ, δN , q0, FN ) ∆N : 2 QN × Σ ∗ → 2 QN ∆N (A, ε) = A ∆N (A, xa) = ∪q∈∆N (A,x )δN (q, a) Lemma: For all x , y ∈ Σ∗, ∆N (A, xy ) = ∆N (∆N (A, x ), y ) ▶ Proof via induction on |xy | — exercise Lecture 2 Theorem. Every nondeterministic finite automaton has an equivalent deterministic finite automaton Proof Take any NFA: N = (QN , Σ, δN , q0, FN ) Extended transition function: ∆N : 2 QN × Σ∗ → 2QN ∆N (A, ε) = A ∆N (A, xa) = ∪q∈∆N (A,x )δN (q, a) We need to construct a DFA M that accepts the same language The Subset Construction: M = (QM, Σ, δM, q0, FM) QM = 2QN δM(A, a) = ∆N (A, a) FM = {A ⊆ QN : A ∩ FN , ∅}Lecture 2 Proof of Theorem (continued) Lemma. For all A ⊆ QN , x ∈ Σ∗, ∆M(A, x ) = ∆N (A, x ) Proof of Lemma: Induction on |x| Base case: x = ε ∆M(A, ε) = A = ∆N (A, ε) Induction Step: Let x = ya where a ∈ Σ and a , ∅ ∆M(A, ya) = δM(∆M(A, y ), a) (Definition of ∆M ) = δM(∆N (A, y ), a) (Induction as |y | < |x |) = ∆N (∆N (A, y ), a) (By subset construction) = ∆N (A, ya) (Definition of ∆N ) Lemma implies Theorem: x ∈ L(M) ⇔ ∆M(q0, x ) ∈ FM ⇔ ∆M(q0, x ) ∩ FN , ∅ ⇐⇒︸︷︷︸ Lemma ∆N (q0, x ) ∩ FN , ∅ ⇔ x ∈ L(N) Lecture 2 Back to Concatenation L1 ◦ L2 = {w ∈ Σ∗ : w = w1.w2, w1 ∈ L1 and w2 ∈ L2} Lecture 2 Concatenation 1.2 NONDETERMINISM 61 FIGURE 1.48 Construction of N to recognize A1 ◦ A2 PROOF Let N1 =(Q1, Σ, δ1,q1,F1) recognize A1aand N2 =(Q2, Σ, δ2,q2,F2) recognize A2“ Construct N =(Q, Σ, δ,q1,F2) to recognize A1 ◦ A2“ 1. Q = Q1 ∪ Q2“ The states of N are all the states of N1 and N2“ 2. The state q1 is the same as the start state of N1“ 3. The accept states F2 are the same as the accept states of N2“ 4. Deﬁne δ so that for any q ∈ Q and any a ∈ Σεa δ(q, a)= ⎧ ⎪⎪⎪⎨ ⎪⎪⎪⎩ δ1(q, a) q ∈ Q1 and q ̸∈ F1 δ1(q, a) q ∈ F1 and a ̸= ε δ1(q, a) ∪ {q2} q ∈ F1 and a = ε δ2(q, a) q ∈ Q2. ⁄ÉÊÖÈÁ³©Ï_qopq_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³m_¢ÀÀ_·Á³©ÏÎ_·ðÎðÈÑð−m_ﬁ¾Ö_ÃÉÏ_²ð_®ÉÊÁð−k_Î®¾ÃÃð−k_ÉÈ_−ÌÊÀÁ®¾Ïð−k_ÁÃ_Ó©ÉÀð_ÉÈ_ÁÃ_Ê¾ÈÏm_¥Ìð_ÏÉ_ðÀð®ÏÈÉÃÁ®_ÈÁ³©ÏÎk_ÎÉÅð_Ï©ÁÈ−_Ê¾ÈÏÖ_®ÉÃÏðÃÏ_Å¾Ö_²ð_ÎÌÊÊÈðÎÎð−_×ÈÉÅ_Ï©ð_ ð£ÉÉÄ_¾Ã−nÉÈ_ð⁄©¾ÊÏðÈgÎhm_ƒ−ÁÏÉÈÁ¾À_ÈðÑÁðÓ_©¾Î_−ððÅð−_Ï©¾Ï_¾ÃÖ_ÎÌÊÊÈðÎÎð−_®ÉÃÏðÃÏ_−ÉðÎ_ÃÉÏ_Å¾ÏðÈÁ¾ÀÀÖ_¾××ð®Ï_Ï©ð_ÉÑðÈ¾ÀÀ_Àð¾ÈÃÁÃ³_ðÔÊðÈÁðÃ®ðm_⁄ðÃ³¾³ð_›ð¾ÈÃÁÃ³_ÈðÎðÈÑðÎ_Ï©ð_ÈÁ³©Ï_ÏÉ_ÈðÅÉÑð_¾−−ÁÏÁÉÃ¾À_ ®ÉÃÏðÃÏ_¾Ï_¾ÃÖ_ÏÁÅð_Á×_ÎÌ²ÎðËÌðÃÏ_ÈÁ³©ÏÎ_ÈðÎÏÈÁ®ÏÁÉÃÎ_ÈðËÌÁÈð_ÁÏm Lecture 2 Formal construction Let N1 = (Q1, Σ, δ1, q1, F1) recognize A1, and N2 = (Q2, Σ, δ2, q2, F2) recognize A2 Construct N = (Q, Σ, δ, q1, F2) to recognize A1 ◦ A2 1 Q = Q1 ∪ Q2 The states of N are all the states of N1 and N2 2 The state q1 is the same as the start state of N1 3 The accept states F2 are the same as the accept states of N2 4 Define δ so that for any q ∈ Q and any a ∈ Σ ∪ {ε}, δ(q, a) =    δ1(q, a) q ∈ Q1 and q < F1 δ1(q, a) q ∈ F1 and a , ε δ1(q, a) ∪ {q2} q ∈ F1 and a = ε δ2(q, a) q ∈ Q2 Lecture 2 Is every Language Regular? Lecture 2","libVersion":"0.5.0","langs":""}