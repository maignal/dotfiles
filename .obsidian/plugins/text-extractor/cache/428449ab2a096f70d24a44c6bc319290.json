{"path":"Homeworks/ac.pdf","text":"Homework II, Theory of Computation 2025 Submission: The deadline for Homework 2 is 23:59 on 17 April. Please submit your solutions on Moodle. Typing your solutions using a typesetting system such as LATEX is strongly encouraged! If you must handwrite your solutions, write cleanly and with a pen. Messy and unreadable homeworks will not be graded. No late homeworks will be accepted. Writing: Please be precise, concise and (reasonably) formal. Keep in mind that many of the problems ask you to provide a proof of a statement (as opposed to, say, just to provide an example). Therefore, make sure that your reasoning is correct and there are no holes in it. A solution that is hard/impossible to decipher/follow might not get full credit (even if it is in principle correct). You do not need to reprove anything that was shown in the class—just state clearly what was proved and where. Collaboration: These problem sets are meant to be worked on in groups of 2–4 students. Please submit only one writeup per team—it should contain the names of all the students. You are strongly encouraged to solve these problems by yourself. If you must, you may use books or online resources to help solve homework problems, but you must credit all such sources in your writeup and you must never copy material verbatim. Even though only one writeup is submitted, it is expected that each one of the team members is able to fully explain the solutions if requested to do so. Grading: Each of the two problems will be graded on a scale from 0 to 5. Warning: Your attention is drawn to the EPFL policy on academic dishonesty. In particular, you should be aware that copying solutions, in whole or in part, from other students in the class or any other source (e.g., ChatGPT) without acknowledgement constitutes cheating. Any student found to be cheating risks automatically failing the class and being referred to the appropriate office. Page 1 (of 2) CS-251 Theory of Computation • Spring 2025 Homework 2 1 Classify each of the following languages into one of the following three categories: decidable, undecidable but recognizable, unrecognizable Justify your answers with proofs. (Recall below that L(M ) = {w : M accepts w} is the language recognized by M .) 1a L1 = {⟨M ⟩ : M is a TM and L(M ) is decidable} 1b L2 = {⟨M, N ⟩ : M and N are TMs and L(M ) ∩ L(N ) ̸= ∅ } 2 Busy Beaver. Define the n-th Busy Beaver number, denoted BB(n), as the largest number k ∈ N such that there exists a TM M = (Q, Σ, Γ, δ, q0, qhalt) such that (1) M has |Q| = n + 1 states (that is, n states in addition to its halting state qhalt), (2) M has a binary input/tape alphabet, Σ = Γ = {0, 1}, (3) M , on the empty input ε, halts with 1k written on its tape. In other words, amongst all (n + 1)-state TMs that halt on the empty input, what is the longest all-1 string that it can output? Note that BB(n) is always finite, as there are only finitely many distinct TMs satisfying (1)–(3) for any given n. Show that the function BB : N → N is not computable. That is, show that there is no TM that on input n (given in binary) will always halt with BB(n) (in binary) on its tape. (Hint: If BB were computable, how would you decide the Halting problem? ) Page 2 (of 2) CS-251 Theory of Computation • Spring 2025","libVersion":"0.5.0","langs":""}